
NOMES:
=======

COURSE => LECTURE

SCHOOL => NETWORK

JUSTIFICATION => EXPLANATION

COURSERESOURCE => ATTACHMENT

LESSON => TOPIC




ARQUIVOS
==========
colocar imagens em subpastas



PROGRAMAÇÃO
===========

substituir caminhos absolutos por relativos atraves do rails, ex: image_path("edit.png")  

carregar scripts no bottom da pagina para melhor peformace
usar size() ao inves de length()
adicionar counter cache (ver como rails ajuda a fazer isso)
tirar do base_controller e adicionar no application_controller
diminuir quantidade de partials (principalmente os de statuses)
mais rapido cookie-based session or activerecord???
colocar javascript em <% content_for :js do %> <!-- javascript code to run, for this view only --> <% end %> e adicionar <%= yield :js %> no header
subdivisão de pastas, do tipo controller/courses/courses_controller  etc

remover todos os haml
remover plugins antigos do CE nao-utilizados.
Unobtrusive Javascript com jquery
SEGURANÇA http://railscasts.com/episodes/178-seven-security-tips
Atualizar para Rails 3.0 (talvez mais posteriormente pois teria q atualizar todos os plugins)
listagens e paginações com AJAX http://railscasts.com/episodes/174-pagination-with-ajax
Usar Jquery ao invés de Prototype http://railscasts.com/episodes/136-jquery

Wizards devem ser como em: http://railscasts.com/episodes/217-multistep-forms
Repensar o sistema de Logs (atividades) e pontuação
Fazer melhor uso dos parciais
Buscar por 'TODO' no projeto inteiro

substituir consultas do tipo @user.follows[0..9] por limit = 10 no sql 

CONSULTAS
=========

ver o que pode ser substituido em destroy_all e delete_all

 @exam_user = Exam.find(params[:exam_user_id])
 @exam_user.update_attributes ...
 
 por 
 
   ExamUser.update(params[:exam_user_id], :public => params[:public])


SCRIPTS
=======

Substituir prototype, scriptaculous por jquery???
