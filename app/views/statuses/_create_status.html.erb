

<%# Form de status  %>
<% random_number = get_random_number%>
<div class="create-status inform-my-status">
  <%= form_for @status, :remote => true, :html => { :class => "form-loader concave-form" } do |f| %>
    <%= flash[:statuses_errors] %>
    <%= hidden_field_tag "return", request.url %>
    <%= hidden_field :status, :statusable_id, :value => statusable.id %>
    <%= hidden_field :status, :statusable_type, :value => statusable.class.to_s %>
    <%= hidden_field_tag "status[type]", 'Activity' %>

    <%= f.error_messages %>
    <%= field_set_tag do %>
      <%= f.label :text, "Seu mural",
        :class => "status-icon replacement"%>
      <%= f.text_area :text, :rows => 1, :class => "status textarea status-#{random_number}" %>
      <%= render 'shared/limit_char_field', :class_textarea => "status-#{random_number}", :limit => 800 %>
      <div class="status-buttons">
        <a href="#" class="cancel">Cancelar</a>
        <%= f.submit 'Postar' %>
      </div>
  <% end %>
<% end %>
</div>

<script>

  function replaceURLWithHTMLLinks(text) {
      var exp = /(\b(https?|ftp):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/ig;
      return text.replace(exp,"<a href='$1'>$1</a>"); 
  }

  $('.status.textarea').keyup(function(){
      var data = $(this).val();
      // Then i would try and split the spaces and carriages 
      // array = data.split('\n|\r\n|\s|,'); //Split by returns,new lines,spaces,commas.
      var regexp = /^(\b(https?|ftp):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/ig;

      // My Regex
      // ^(((http|https):\/\/)|(www\.))[aA-zZ]*\.([aA0-zZ\/\-]*)$

      // $(array).each(function(value){
      // Now i will check the URL is valid
      if(regexp.test(data))
      {
        console.log("REGEX ACCEPTED")
        replaceURLWithHTMLLinks(data);
        //Valid URL so i will then append it to the links container
        //Here you can do e
        // $('<a></a>').attr('href',data).val(data).appendTo('.linksContainer');
      // }
      }
  });
</script>
